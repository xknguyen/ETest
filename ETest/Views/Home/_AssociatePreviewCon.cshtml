@model AnswerDetail
@{
    var itemRight = Model.QuestionDetail.AssociateItems.Select(s => s.Associate).ToList();
    foreach (var item in Model.QuestionDetail.AssociateItems)
    {
        var choice = Model.AssociateItems.Find(s => s.ChoiceId == item.ChoiceId);
        if (!string.IsNullOrEmpty(choice.AssociateId))
        {
            var right = itemRight.Find(s => s.ChoiceId == choice.AssociateId);
            item.AssociateId = right.ChoiceId;
            item.Associate = right;
            itemRight.Remove(right);
        }
        else
        {
            item.AssociateId = "";
        }
    }
}


<div class="row associate-box" id="@Model.QuestionDetailId">
    <div class="col-md-8 answer-box-parent">
        @foreach (var left in Model.QuestionDetail.AssociateItems)
        {
            <div class="answer-box">
                <div class="right-answer associate-answer-border" data-right-id="@left.ChoiceId">
                    @left.Content
                </div>
                <div class="left-answer associate-answer-border ui-widget-content">
                    @if (!string.IsNullOrEmpty(left.AssociateId))
                    {
                        <div class="left-answer-dragged" data-right-id="@left.AssociateId">
                            @left.Associate.Content
                        </div>
                    }
                </div>
                <div style="clear: both"></div>
            </div>
        }
    </div>
    <div class="col-md-4 associate-answer-box-virtual">
        <div class="ui-widget-content associate-answer-box">
            @foreach (var right in itemRight)
            {
                <div class="left-choice associate-answer-border" data-right-id="@right.ChoiceId">
                    @right.Content
                </div>
            }

        </div>
    </div>
</div>


<div style="height: 30px;"></div>

