@model AnswerSheet

@{
    ViewBag.Title = "Xem trước bài kiểm tra";
}

@section pluginStyles
{
    <link href="~/Content/PagedList.css" rel="stylesheet" />
    <link href="~/Content/AdmGrid.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-slider.min.css" rel="stylesheet" />
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <link href="~/Content/plugins/iCheck/custom.css" rel="stylesheet" />
    <link href="~/Content/custom/previewTest.css" rel="stylesheet" />
    <style>
        .container {
            width: 95%;
        }
    </style>
}
<div class="row">
    <div class="col-md-12">
        <div class="ibox float-e-margins" id="testContainer">
            @Html.Partial("_TestPreviewCon",Model)
        </div>
    </div>
</div>

@section pluginScripts
{
    <script src="~/Scripts/plugins/iCheck/icheck.min.js"></script>
    <script src="~/Scripts/jquery-ui.js"></script>
    <script src="~/Scripts/plugins/chosen/chosen.jquery.js"></script>
    <script src="~/Scripts/bootstrap-slider.min.js"></script>
    <script src="~/Scripts/jquery.shuffle.js"></script>
}

@section scripts
{
    <script src="~/Scripts/model/answerSheet.js"></script>
    <script src="~/Scripts/custom/questionPreview.js"></script>
    <script>
        $(function () {
            $.fn.getLastNumber = function () {
                var li = $(this).find("li").last();
                var a = $(li).find("a").first();
                var number = parseInt($(a).text().trim());
                return isNaN(number) ? 0 : number;
            }

            $("#navbar-button").click();

            $.fn.getChoice = function (name) {
                var answers = [];
                $(this).find("input[name='" + name + "']:checked").each(function () {
                    var parent = $(this).closest("div.i-checks");
                    answers.push($(parent).attr("data-id"));
                });
                return answers;
            }

            $.fn.getOrder = function () {
                var answers = [];
                $(this).find("ul.sortable").first().find("li").each(function () {
                    answers.push($(this).attr("data-id"));
                });
                return answers;
            }

            $.fn.getAssociate = function () {
                var answers = [];
                $(this).find("div.answer-box").each(function () {
                    var leftId = $($(this).find("div.right-answer").first()).attr("data-right-id");
                    var rightId = $($(this).find("div.left-answer-dragged").first()).attr("data-right-id");;
                    answers.push(new AssociateAnswer(rightId, leftId));
                });
                return answers;
            }

            $.fn.getGap = function () {
                var answers = [];
                $(this).find("span.gap-field-drogged").each(function (index) {
                    var text = $(this).find("div.ui-draggable").first();
                    answers.push(new GapAnswer(index, $(text).text().trim()));
                });
                return answers;
            }

            $.fn.getFill = function () {
                var answers = [];
                $(this).find("input[name='gapField']").each(function (index) {
                    answers.push(new GapAnswer(index, $(this).val().trim()));
                });
                return answers;
            }

            $.fn.getSlider = function () {
                var answers = [];
                answers.push($($(this).find("label.currentValue").first()).text());
                return answers;
            }

            $.fn.getQuestionDetail = function () {
                var questionDetail = new QuestionDetail();
                questionDetail.id = $(this).attr("data-id");
                questionDetail.type = $(this).attr("data-type");
                var name = $(this).attr("data-name");
                switch (questionDetail.type) {
                    case "ChoiceMedia":
                    case "Choice":
                        questionDetail.answer = $(this).getChoice(name);
                        break;
                    case "Order":
                        questionDetail.answer = $(this).getOrder();
                        break;
                    case "Associate":
                        questionDetail.answer = $(this).getAssociate();
                        break;
                    case "Gap":
                        questionDetail.answer = $(this).getGap();
                        break;
                    case "Slider":
                        questionDetail.answer = $(this).getSlider();
                        break;
                    case "Fill":
                        questionDetail.answer = $(this).getFill();
                        break;
                }
                return questionDetail;
            }

            $.fn.getTestDetail = function () {
                var testDetail = new TestDetail();
                testDetail.id = $(this).attr("data-id");
                testDetail.questionDetail = [];
                $(this).find(".question-details").each(function () {
                    testDetail.questionDetail.push($(this).getQuestionDetail());
                });
                return testDetail;
            }

            $.fn.getAnswerSheet = function () {
                var answerSheet = new AnswerSheet();
                answerSheet.id = $("#TestId").val();
                answerSheet.testDetails = [];
                $(".question-field").each(function () {
                    answerSheet.testDetails.push($(this).getTestDetail());
                });
                return answerSheet;
            }

            function shuffle(array) {
                for (var j, x, i = array.length; i; j = parseInt(Math.random() * i), x = array[--i], array[i] = array[j], array[j] = x);
                return array;
                //var counter = array.length, temp, index;

                //// While there are elements in the array
                //while (counter > 0) {
                //    // Pick a random index
                //    index = Math.floor(Math.random() * counter);

                //    // Decrease counter by 1
                //    counter--;

                //    // And swap the last element with it
                //    temp = array[counter];
                //    array[counter] = array[index];
                //    array[index] = temp;
                //}

                //return array;
            }
            function submitTest() {
                var s = $("#questionConBox").getAnswerSheet();
                $.ajax({
                    type: "POST",
                    url: "/Home/GradeTest",
                    data: {
                        data: JSON.stringify(s)
                    }
                }).done(function (res) {
                    $("#testContainer").html(res);
                });
            }
            $.fn.shuffleQuestionDetail = function () {
                $(this).find("div.question-details").each(function () {
                    var type = $(this).attr("data-type");
                    switch (type) {
                        case "ChoiceMedia":
                        case "Choice":
                            var choiceParent = $(this).find("div.choice-question-content");
                            var choices = $(choiceParent).find("div.choice-question");
                            $(choiceParent).html(shuffle(choices));
                            break;
                        case "Order":
                            var ul = $(this).find("ul.sortable").first();
                            var li = $(ul).find("li.ui-state-default");
                            $(ul).html(shuffle(li));
                            break;
                        case "Associate":
                            var answerBoxParent = $(this).find("div.answer-box-parent");
                            var answerBox = $(answerBoxParent).find(".answer-box");
                            $(answerBoxParent).html(shuffle(answerBox));
                            var leftChoiceParent = $(this).find(".associate-answer-box");
                            var leftChoice = $(leftChoiceParent).find(".left-choice");
                            $(leftChoiceParent).html(shuffle(leftChoice));
                            break;
                        case "Gap":
                            var grapParent = $(this).find(".gap-answer-box");
                            var grap = $(grapParent).find(".answer-gap-dragged");
                            $(grapParent).html(shuffle(grap));
                            $(grapParent).append("<div style='clear: both'></div>");
                            break;
                    }
                });

            }

            $.fn.shuffleQuestion = function () {
                var isMix = $("#MixedQuestions").val();
                var questions = $("#questionConBox").find("div.question-field");
                if (questions[0] != null) {
                    $(questions[0]).attr("class", "tab-pane fade question-field");
                }
                if (isMix == "True")
                    questions = shuffle(questions);
                //var container = $("#questionConBox").find("div.tab-content").first();
                questions.each(function (index) {
                    var i = index + 1;
                    $(this).attr("id", "question-" + i);
                    $(this).shuffleQuestionDetail();
                    //container.append(this);
                });
                if (questions[0] != null) {
                    $(questions[0]).attr("class", "tab-pane fade question-field in active");
                }
            }
            $("#startTest").on("click", function (e) {
                e.preventDefault();
                $("#testContainer").html("");
                var pathname = window.location.pathname;
                var paths = pathname.split("/");
                var testId = paths[paths.length - 1];
                var url = "/Home/GetTestPreview";
                $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        id: testId
                    }
                }).done(function (response) {
                    $("#testContainer").html(response);
                    $("#test-questions").shuffleQuestion();
                    $("#test-questions").createPreview();
                    $("#backward").attr('disabled', 'disabled');
                    if ($("#questionNoBox").getLastNumber() == 1) {
                        $("#forward").attr("disabled", 'disabled');
                    }
                    $("#questionNoBox").on("click", "a", function () {
                        var number = parseInt($(this).text().trim());
                        $("#backward").removeAttr('disabled');
                        $("#forward").removeAttr('disabled');
                        if (number == 1) {
                            $("#backward").attr('disabled', 'disabled');
                        }
                        var lastNumber = $("#questionNoBox").getLastNumber();
                        if (lastNumber == number) {
                            $("#forward").attr('disabled', 'disabled');
                        }
                    });
                    $(".bfbutton").on("click", function () {
                        var disabled = $(this).attr("disabled");
                        if (disabled == null) {
                            var id = $(this).attr("id");
                            var as = $("#questionNoBox").find("a");
                            var currentA = $("#questionNoBox").find("li.active").first().find("a").first();
                            var currentNumber = parseInt($(currentA).text().trim()) - 1;

                            if (id == "backward") {
                                $(as[currentNumber - 1]).click();
                            } else {
                                $(as[currentNumber + 1]).click();
                            }
                            $("html, body").animate({ scrollTop: parseInt($("#questionConBox").offset().top - 50) }, "fast");
                        }
                    });

                    $("#submit").on("click", function (evt) {
                        evt.preventDefault();
                        if (confirm("Bạn có chắc chắn nộp bài không?"))
                            submitTest();
                    });

                    // Đếm ngược
                    var second = parseInt($("#TestTime").val().trim());
                    var submitTime = parseInt($("#SubmitTime").val().trim());;
                    var timecounter = setInterval(function () {
                        if (second == 0) {
                            clearInterval(timecounter);
                            $("#submit").click();
                        } else {
                            if (second != parseInt($("#TestTime").val().trim()) && second % submitTime == 0) {
                                var s = $("#questionConBox").getAnswerSheet();
                                $.ajax({
                                    type: "POST",
                                    url: "/Home/AutoSubmit",
                                    data: {
                                        data: JSON.stringify(s)
                                    }
                                });
                            }
                            var min = parseInt(second / 60, 10);
                            var sec = parseInt(second % 60, 10);

                            min = min.toString().length == 1 ? "0" + min : min.toString();
                            sec = sec.toString().length == 1 ? "0" + sec : sec.toString();
                            second--;
                            $("#testTimeShow").text(min + ":" + sec);
                        }
                    }, 1000);
                });
            });
        });
    </script>
}