@using System.Text.RegularExpressions
@model Question

@section pluginStyles
{
    <link href="~/Content/jquery-ui.css" rel="stylesheet"/>
    <link href="~/Content/plugins/iCheck/custom.css" rel="stylesheet"/>
    <link href="~/Content/bootstrap-slider.min.css" rel="stylesheet"/>
    <link href="~/Content/custom/previewQuestion.css" rel="stylesheet"/>
}

<div style="background: white; padding: 20px">
    <div class="row" id="preview-question-form">
        <div class="col-md-12 question-title">
            <div class="col-md-1">Câu: </div>
            <div class="col-md-11">@Html.Raw(Model.QuestionTitle)</div>
        </div>

        @foreach (var detail in Model.QuestionDetails)
        {
            <div class="col-md-12 question-details">
                @switch (detail.QuestionType)
                {
                    case QuestionType.Choice:
                        <div class="question-detail-title">@Html.Raw(detail.QuestionTitle)</div>
                        @Html.Partial("_ChoicePreview", detail)
                        break;
                    case QuestionType.Order:
                        <div class="question-detail-title">@Html.Raw(detail.QuestionTitle)</div>
                        @Html.Partial("_OrderPreview", detail)
                        break;
                    case QuestionType.Associate:
                        <div class="question-detail-title">@Html.Raw(detail.QuestionTitle)</div>
                        @Html.Partial("_AssociatePreview", detail)
                        break;
                    case QuestionType.Gap:
                        @Html.Partial("_GapPreview", detail)
                        break;
                    case QuestionType.Slider:
                        <div class="question-detail-title">@Html.Raw(detail.QuestionTitle)</div>
                        @Html.Partial("_SliderPreview", detail)
                        break;
                    case QuestionType.ChoiceMedia:
                        <div class="question-detail-title">@Html.Raw(detail.QuestionTitle)</div>
                        @Html.Partial("_ChoiceMediaPreview", detail)
                        break;
                    case QuestionType.Fill:
                        var titleFill = Regex.Replace(detail.QuestionTitle, @"<input name=""gapField"" type=""text"" value=""([\d]+)"" />", "<input name=\"gapField\" type =\"text\" />");
                        <div class="question-detail-title">@Html.Raw(titleFill)</div>
                        break;
                }
            </div>
        }

    </div>
</div>



@section pluginScripts
{
    <script src="~/Scripts/plugins/iCheck/icheck.min.js"></script>
    <script src="~/Scripts/jquery-ui.js"></script>
    <script src="~/Scripts/plugins/chosen/chosen.jquery.js"></script>
    <script src="~/Scripts/bootstrap-slider.min.js"></script>
}




@section scripts
{
    @Scripts.Render("~/bundles/admjqueryval")
    <script>
        
    </script>
}